{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Template","markdownRemark","data","frontmatter","html","title","className","date","dangerouslySetInnerHTML","__html","pageQuery","liStyle","display","marginLeft","marginBottom","Header","siteTitle","images","Map","allFile","edges","map","edge","node","name","publicURL","style","margin","maxWidth","padding","textAlign","to","color","textDecoration","listStyle","href","target","rel","src","get","alt","defaultProps","Layout","children","site","siteMetadata","Date","getFullYear"],"mappings":"6FAAA,0IAKe,SAASA,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACzBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,EAAYE,QACxB,yBAAKC,UAAU,aACb,4BAAKH,EAAYE,OACjB,4BAAKF,EAAYI,MACjB,yBACED,UAAU,oBACVE,wBAAyB,CAAEC,OAAQL,OAOtC,IAAMM,EAAS,c,2cCnBhBC,EAAU,CACdC,QAAS,eACTC,WAAY,GACZC,aAAc,GAGVC,EAAS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACVd,EAAI,OAaJe,EAAS,IAAIC,IAAIhB,EAAKiB,QAAQC,MAAMC,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAKC,KAAKC,KAAMF,EAAKC,KAAKE,eAEjF,OACE,4BAAQC,MAAO,CAAEZ,aAAa,YAC5B,yBACEY,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,oBACRC,UAAW,WAGb,wBAAIJ,MAAO,CAAEC,OAAQ,IACnB,kBAAC,OAAD,CACEI,GAAG,IACHL,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBjB,IAGL,wBAAIU,MAAO,CAAEQ,UAAW,OAAQJ,UAAW,SAAUH,OAAQ,aAC3D,wBAAID,MAAK,iBAAOf,EAAP,CAAgBE,WAAY,KACnC,uBAAGsB,KAAK,2CAA2CC,OAAO,SAASC,IAAI,cACrE,yBAAKC,IAAKrB,EAAOsB,IAAI,YAAaC,IAAI,eAG1C,wBAAId,MAAOf,GACT,uBAAGwB,KAAK,iCAAiCC,OAAO,SAASC,IAAI,cAC3D,yBAAKC,IAAKrB,EAAOsB,IAAI,UAAWC,IAAI,iBAalDzB,EAAO0B,aAAe,CACpBzB,UAAU,IAGGD,Q,UCvBA2B,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVzC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQc,UAAWd,EAAK0C,KAAKC,aAAaxC,QAC1C,yBACEqB,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOc,GACP,sCACK,IAAIG,MAAOC,cADhB,mBAGE,uBAAGZ,KAAK,2BAA2BC,OAAO,SAASC,IAAI,cAAvD,e","file":"component---src-templates-post-js-e48acc0084815d2d152e.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nexport default function Template({ data }) {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className=\"blog-post\">\n        <h1>{frontmatter.title}</h1>\n        <h2>{frontmatter.date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"DD/MM/YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst liStyle = {\n  display: 'inline-block',\n  marginLeft: 15,\n  marginBottom: 0\n}\n\nconst Header = ({ siteTitle }) => {\n  const data = useStaticQuery(graphql`\n    {\n      allFile(filter: {extension: {eq: \"svg\"}, name: {in: [\"github\", \"linkedin\"]}}) {\n        edges {\n          node {\n            publicURL\n            name\n          }\n        }\n      }\n    }  \n  `)\n\n  const images = new Map(data.allFile.edges.map(edge => [edge.node.name, edge.node.publicURL]));\n\n  return (\n    <header style={{ marginBottom: `1.45rem` }}>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0.75rem 1.0875rem`,\n          textAlign: 'center'\n        }}\n      >\n        <h3 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `black`,\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h3>\n        <ul style={{ listStyle: 'none', textAlign: 'center', margin: '10px 0 0' }}>\n          <li style={{ ...liStyle, marginLeft: 0 }}>\n            <a href=\"https://www.linkedin.com/in/duzzifelipe/\" target=\"_blank\" rel=\"noreferrer\">\n              <img src={images.get(\"linkedin\")} alt=\"Linkedin\" />\n            </a>\n          </li>\n          <li style={liStyle}>\n            <a href=\"https://github.com/duzzifelipe\" target=\"_blank\" rel=\"noreferrer\">\n              <img src={images.get(\"github\")} alt=\"Github\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noreferrer\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}