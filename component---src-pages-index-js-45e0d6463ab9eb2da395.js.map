{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/index.js"],"names":["liStyle","display","marginLeft","marginBottom","Header","siteTitle","data","images","Map","allFile","edges","map","edge","node","name","publicURL","style","margin","maxWidth","padding","textAlign","to","color","textDecoration","listStyle","href","target","rel","src","get","alt","defaultProps","Layout","children","site","siteMetadata","title","Date","getFullYear","IndexPage","posts","className","allMarkdownRemark","front","frontmatter","slug","date"],"mappings":"2uCAKMA,EAAU,CACdC,QAAS,eACTC,WAAY,GACZC,aAAc,GAGVC,EAAS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAI,OAaJC,EAAS,IAAIC,IAAIF,EAAKG,QAAQC,MAAMC,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAKC,KAAKC,KAAMF,EAAKC,KAAKE,eAEjF,OACE,4BAAQC,MAAO,CAAEb,aAAa,YAC5B,yBACEa,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,oBACRC,UAAW,WAGb,wBAAIJ,MAAO,CAAEC,OAAQ,IACnB,kBAAC,OAAD,CACEI,GAAG,IACHL,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBlB,IAGL,wBAAIW,MAAO,CAAEQ,UAAW,OAAQJ,UAAW,SAAUH,OAAQ,aAC3D,wBAAID,MAAK,iBAAOhB,EAAP,CAAgBE,WAAY,KACnC,uBAAGuB,KAAK,2CAA2CC,OAAO,SAASC,IAAI,cACrE,yBAAKC,IAAKrB,EAAOsB,IAAI,YAAaC,IAAI,eAG1C,wBAAId,MAAOhB,GACT,uBAAGyB,KAAK,iCAAiCC,OAAO,SAASC,IAAI,cAC3D,yBAAKC,IAAKrB,EAAOsB,IAAI,UAAWC,IAAI,iBAalD1B,EAAO2B,aAAe,CACpB1B,UAAU,IAGGD,Q,UCvBA4B,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACV3B,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQD,UAAWC,EAAK4B,KAAKC,aAAaC,QAC1C,yBACEpB,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOc,GACP,sCACK,IAAII,MAAOC,cADhB,mBAGE,uBAAGb,KAAK,2BAA2BC,OAAO,SAASC,IAAI,cAAvD,e,+NCKKY,UArCG,WAChB,IAAMC,EAAK,OAgBX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKJ,MAAM,SACX,qCACA,yBAAKK,UAAU,aACdD,EAAME,kBAAkBhC,MAAMC,KAAI,SAAAC,GACjC,IAAM+B,EAAQ/B,EAAKC,KAAK+B,YAExB,OACE,6BACE,kBAAC,OAAD,CAAMvB,GAAI,SAAWsB,EAAME,MAAOF,EAAMP,OACxC,8BAAOO,EAAMG","file":"component---src-pages-index-js-45e0d6463ab9eb2da395.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst liStyle = {\n  display: 'inline-block',\n  marginLeft: 15,\n  marginBottom: 0\n}\n\nconst Header = ({ siteTitle }) => {\n  const data = useStaticQuery(graphql`\n    {\n      allFile(filter: {extension: {eq: \"svg\"}, name: {in: [\"github\", \"linkedin\"]}}) {\n        edges {\n          node {\n            publicURL\n            name\n          }\n        }\n      }\n    }  \n  `)\n\n  const images = new Map(data.allFile.edges.map(edge => [edge.node.name, edge.node.publicURL]));\n\n  return (\n    <header style={{ marginBottom: `1.45rem` }}>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0.75rem 1.0875rem`,\n          textAlign: 'center'\n        }}\n      >\n        <h3 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `black`,\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h3>\n        <ul style={{ listStyle: 'none', textAlign: 'center', margin: '10px 0 0' }}>\n          <li style={{ ...liStyle, marginLeft: 0 }}>\n            <a href=\"https://www.linkedin.com/in/duzzifelipe/\" target=\"_blank\" rel=\"noreferrer\">\n              <img src={images.get(\"linkedin\")} alt=\"Linkedin\" />\n            </a>\n          </li>\n          <li style={liStyle}>\n            <a href=\"https://github.com/duzzifelipe\" target=\"_blank\" rel=\"noreferrer\">\n              <img src={images.get(\"github\")} alt=\"Github\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noreferrer\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => {\n  const posts = useStaticQuery(graphql`\n    query PostList {\n      allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              date(formatString: \"DD/MM/YYYY\")\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <h2>Posts</h2>\n      <div className=\"post-list\">\n      {posts.allMarkdownRemark.edges.map(edge => {\n        const front = edge.node.frontmatter\n\n        return (\n          <div>\n            <Link to={'posts/' + front.slug}>{front.title}</Link>\n            <span>{front.date}</span>\n          </div>\n        )\n      })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}